{"version":3,"file":"background.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AEvBA;AACA;AACA;AACA","sources":["webpack://blue_list/./src/background/background.ts","webpack://blue_list/./src/utils.ts","webpack://blue_list/webpack/bootstrap","webpack://blue_list/webpack/before-startup","webpack://blue_list/webpack/startup","webpack://blue_list/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"../utils\");\nchrome.runtime.onInstalled.addListener(() => {\n    chrome.storage.sync.set({\n        \"blueList\": {\n            timeFrom: \"09:00\",\n            timeTo: \"17:00\",\n            weekdays: [\n                true,\n                true,\n                true,\n                true,\n                true,\n                false,\n                false\n            ],\n            urls: [],\n            // use extension tab as default redirect page\n            redirectURL: \"chrome://extensions\",\n        }\n    });\n});\nchrome.tabs.onUpdated.addListener((tabID, changeInfo, tab) => __awaiter(void 0, void 0, void 0, function* () {\n    //for initial installation add data to chrome storage\n    chrome.storage.sync.get(\"blueList\", (data) => __awaiter(void 0, void 0, void 0, function* () {\n        if (tab.url) {\n            const currentURL = new URL(tab.url);\n            if (data[\"blueList\"].urls.includes(currentURL.href) ||\n                data[\"blueList\"].urls.includes(`${currentURL.origin}`)) {\n                const current = new Date();\n                const from = new Date((0, utils_1.buildTimeStamp)(data[\"blueList\"].timeFrom));\n                const to = new Date((0, utils_1.buildTimeStamp)(data[\"blueList\"].timeTo));\n                let day = current.getDay() < 1 ? 6 : current.getDay() - 1;\n                // we are going to assume the interval the the user provides wraps \n                // around to the next day in this case\n                if (from > to) {\n                    to.setDate(to.getDate() + 1);\n                }\n                if (current >= from && current <= to && data[\"blueList\"].weekdays[day]) {\n                    const options = {\n                        iconUrl: \"favicon-48x48.png\",\n                        title: \"OOPS\",\n                        message: `Looks like you are trying to access a site on your timeout list, check out options page for more details`,\n                        type: \"basic\",\n                        silent: false,\n                        priority: 2\n                    };\n                    chrome.notifications.create(options);\n                    if (tab.id) {\n                        chrome.tabs.update(tab.id, { url: data[\"blueList\"].redirectURL });\n                    }\n                }\n            }\n        }\n    }));\n}));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchBlueListData = exports.isURL = exports.buildTimeStamp = exports.getURL = exports.getTab = void 0;\nconst getTab = () => __awaiter(void 0, void 0, void 0, function* () {\n    let [tab] = yield chrome.tabs.query({ active: true, lastFocusedWindow: true });\n    return tab;\n});\nexports.getTab = getTab;\nconst getURL = () => __awaiter(void 0, void 0, void 0, function* () {\n    const currentTab = yield getTab();\n    return currentTab.url;\n});\nexports.getURL = getURL;\nconst buildTimeStamp = (time) => {\n    const current = new Date();\n    const ts = `${current.getFullYear()}-${current.getMonth() < 10\n        ? `0${current.getMonth() + 1}`\n        : current.getMonth()}-${current.getDate() < 10\n        ? `0${current.getDate()}`\n        : current.getDate()}T${time}`;\n    return ts;\n};\nexports.buildTimeStamp = buildTimeStamp;\nconst isURL = (url) => {\n    try {\n        const providedUrl = new URL(url);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n};\nexports.isURL = isURL;\nconst fetchBlueListData = () => __awaiter(void 0, void 0, void 0, function* () {\n    const blueListData = yield chrome.storage.sync.get(\"blueList\");\n    return blueListData;\n});\nexports.fetchBlueListData = fetchBlueListData;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/background/background.ts\");\n",""],"names":[],"sourceRoot":""}